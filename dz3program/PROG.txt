begin:     0/0x0: set r1 0xf       -> 00000000 11110001 00000000 
           1/0x1: set r0 0x0       -> 00000000 00000000 00000000 
           2/0x2: ind0 r0          -> 00010101 00000000 00000000 
           3/0x3: ind1 r0          -> 00010110 00000000 00000000 
           4/0x4: ind2 r0          -> 00010111 00000000 00000000 
           5/0x5: ind3 r0          -> 00011000 00000000 00000000 
           6/0x6: indctrl r1       -> 00011001 00000001 00000000 
           7/0x7: input r1         -> 00010100 00000001 00000000 
           8/0x8: ind3 r1          -> 00011000 00000001 00000000 
           9/0x9: input r2         -> 00010100 00000010 00000000 
           10/0xa: ind2 r2         -> 00010111 00000010 00000000 
           11/0xb: set r6 0x0      -> 00000000 00000110 00000000 
           12/0xc: set r5 0x0      -> 00000000 00000101 00000000 
           13/0xd: set r0 0x8      -> 00000000 10000000 00000000 
chk_odd:   14/0xe: mov r3 r2       -> 00000001 00100011 00000000 
           15/0xf: and r3 r0       -> 00001101 00000011 00000000 
           16/0x10: jz shift_num1  -> 00000101 00010010 00110000 
           17/0x11: inc r5         -> 00010001 00000101 00000000 
shift_num1:18/0x12: dshl r2 r1     -> 00001100 00010010 00000000 
           19/0x13: shl r1         -> 00001010 00000001 00000000 
chk_eve:   20/0x14: mov r3 r2      -> 00000001 00100011 00000000 
           21/0x15: and r3 r0      -> 00001101 00000011 00000000 
           22/0x16: jz shift_num2  -> 00000101 00011000 00110000 
           23/0x17: inc r6         -> 00010001 00000110 00000000 
shift_num2:24/0x18: dshl r2 r1     -> 00001100 00010010 00000000 
           25/0x19: shl r1         -> 00001010 00000001 00000000 
           26/0x1a: mov r7 r2      -> 00000001 00100111 00000000 
           27/0x1b: or r7 r1       -> 00001111 00010111 00000000 
           28/0x1c: jnz chk_odd    -> 00000110 00001110 01000000 
           29/0x1d: ind2 r5        -> 00010111 00000101 00000000 
           30/0x1e: ind3 r6        -> 00011000 00000110 00000000 
           31/0x1f: mov r1 r5      -> 00000001 01010001 00000000 
           32/0x20: sub r5 r6      -> 00001000 01100101 00000000 
           33/0x21: jc4 chk_diff   -> 00000011 00100100 00010000 
           34/0x22: sub r6 r1      -> 00001000 00010110 00000000 
           35/0x23: mov r5 r6      -> 00000001 01100101 00000000 
chk_diff:  36/0x24: set r0 0x0     -> 00000000 00000000 00000000 
           37/0x25: set r3 0x3     -> 00000000 00110011 00000000 
           38/0x26: ind2 r0        -> 00010111 00000000 00000000 
           39/0x27: ind3 r0        -> 00011000 00000000 00000000 
           40/0x28: ind3 r5        -> 00011000 00000101 00000000 
           41/0x29: sub r5 r0      -> 00001000 00000101 00000000 
           42/0x2a: jz prt_yes     -> 00000101 00110110 00110000 
           43/0x2b: sub r5 r3      -> 00001000 00110101 00000000 
           44/0x2c: jz prt_yes     -> 00000101 00110110 00110000 
prt_no:    45/0x2d: set r0 0xb     -> 00000000 10110000 00000000 
           46/0x2e: indctrl r0     -> 00011001 00000000 00000000 
           47/0x2f: set r1 0x1     -> 00000000 00010001 00000000 
           48/0x30: ind0 r1        -> 00010101 00000001 00000000 
           49/0x31: set r2 0x7     -> 00000000 01110010 00000000 
           50/0x32: ind1 r2        -> 00010110 00000010 00000000 
           51/0x33: set r3 0x0     -> 00000000 00000011 00000000 
           52/0x34: ind3 r3        -> 00011000 00000011 00000000 
           53/0x35: jmp check_inp  -> 00000010 00111110 01010000 
prt_yes:   54/0x36: set r0 0xe     -> 00000000 11100000 00000000 
           55/0x37: indctrl r0     -> 00011001 00000000 00000000 
           56/0x38: set r1 0xc     -> 00000000 11000001 00000000 
           57/0x39: ind1 r1        -> 00010110 00000001 00000000 
           58/0x3a: set r2 0xd     -> 00000000 11010010 00000000 
           59/0x3b: ind2 r2        -> 00010111 00000010 00000000 
           60/0x3c: set r3 0x5     -> 00000000 01010011 00000000 
           61/0x3d: ind3 r3        -> 00011000 00000011 00000000
check_inp: 62/0x3e: chkin          -> 00010010 00000000 00000000 
           63/0x3f: jz check_inp   -> 00000101 00111110 00110000 
           64/0x40: jmp begin      -> 00000010 00000000 01010000